[00:00:00:013] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:00:00 CST 2021
[00:00:00:032] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:00:00:032] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:00:00:032] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:00:00:033] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:00:00:033] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:00:00:033] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:00:00:033] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:00:00:033] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:00:00:033] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:00:00:033] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:00:00:033] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:00:00:033] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:00:00:033] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:00:00:033] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:00:00:034] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:00:00:034] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:00:00:034] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:00:00:034] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:00:00:034] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:00:00:034] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:00:00:034] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:00:00:034] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:00:17:565] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:00:17:565] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:00:47:567] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:00:47:567] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:01:00:010] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:01:00 CST 2021
[00:01:00:010] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:01:00:010] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:01:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:01:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:01:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:01:00:010] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:01:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:01:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:01:00:011] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:01:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:01:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:01:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:01:00:011] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:01:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:01:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:01:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:01:00:011] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:01:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:01:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:01:00:012] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:01:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:01:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:01:17:569] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:01:17:569] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:01:47:578] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:01:47:578] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:02:00:007] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:02:00 CST 2021
[00:02:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:02:00:007] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:02:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:02:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:02:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:02:00:008] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:02:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:02:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:02:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:02:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:02:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:02:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:02:00:008] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:02:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:02:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:02:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:02:00:009] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:02:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:02:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:02:00:009] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:02:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:02:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:02:17:580] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:02:17:580] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:02:47:594] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:02:47:594] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:03:00:014] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:03:00 CST 2021
[00:03:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:03:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:03:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:03:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:03:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:03:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:03:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:03:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:03:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:03:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:03:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:03:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:03:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:03:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:03:17:608] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:03:17:608] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:03:47:619] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:03:47:619] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:04:00:004] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:04:00 CST 2021
[00:04:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:04:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:04:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:04:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:04:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:04:00:005] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:04:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:04:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:04:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:04:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:04:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:04:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:04:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:04:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:04:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:04:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:04:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:04:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:04:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:04:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:04:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:04:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:04:17:633] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:04:17:633] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:04:47:635] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:04:47:635] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:05:00:002] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:05:00 CST 2021
[00:05:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:05:00:002] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:05:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:05:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:05:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:05:00:002] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:05:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:05:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:05:00:003] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:05:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:05:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:05:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:05:00:003] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:05:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:05:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:05:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:05:00:003] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:05:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:05:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:05:00:004] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:05:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:05:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:05:17:640] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:05:17:640] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:05:47:641] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:05:47:641] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:06:00:008] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:06:00 CST 2021
[00:06:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:06:00:008] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:06:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:06:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:06:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:06:00:008] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:06:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:06:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:06:00:009] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:06:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:06:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:06:00:010] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:06:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:06:00:010] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:06:17:642] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:06:17:642] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:06:47:656] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:06:47:656] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:07:00:015] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:07:00 CST 2021
[00:07:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:07:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:07:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:07:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:07:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:07:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:07:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:07:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:07:00:016] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:07:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:07:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:07:17:672] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:07:17:672] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:07:47:676] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:07:47:676] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:08:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:08:00 CST 2021
[00:08:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:08:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:08:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:08:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:08:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:08:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:08:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:08:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:08:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:08:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:08:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:08:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:08:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:08:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:08:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:08:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:08:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:08:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:08:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:08:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:08:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:08:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:08:17:677] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:08:17:677] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:08:47:690] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:08:47:690] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:09:00:007] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:09:00 CST 2021
[00:09:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:09:00:007] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:09:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:09:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:09:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:09:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:09:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:09:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:09:00:008] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:09:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:09:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:09:17:699] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:09:17:699] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:09:47:705] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:09:47:705] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:10:00:012] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:10:00 CST 2021
[00:10:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:10:00:012] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:10:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:10:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:10:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:10:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:10:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:10:00:013] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:10:00:013] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:10:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:10:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:10:00:014] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:10:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:10:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:10:17:714] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:10:17:714] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:10:47:730] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:10:47:730] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:11:00:007] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:11:00 CST 2021
[00:11:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:11:00:007] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:11:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:11:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:11:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:11:00:008] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:11:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:11:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:11:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:11:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:11:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:11:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:11:00:009] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:11:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:11:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:11:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:11:00:009] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:11:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:11:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:11:00:009] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:11:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:11:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:11:17:732] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:11:17:732] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:11:47:738] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:11:47:738] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:12:00:011] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:12:00 CST 2021
[00:12:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:12:00:011] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:12:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:12:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:12:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:12:00:011] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:12:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:12:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:12:00:012] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:12:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:12:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:12:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:12:00:012] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:12:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:12:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:12:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:12:00:012] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:12:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:12:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:12:00:013] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:12:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:12:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:12:17:741] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:12:17:741] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:12:47:744] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:12:47:744] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:13:00:014] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:13:00 CST 2021
[00:13:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:13:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:13:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:13:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:13:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:13:00:014] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:13:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:13:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:13:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:13:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:13:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:13:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:13:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:13:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:13:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:13:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:13:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:13:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:13:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:13:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:13:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:13:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:13:17:751] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:13:17:751] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:13:47:755] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:13:47:755] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:14:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:14:00 CST 2021
[00:14:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:14:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:14:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:14:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:14:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:14:00:005] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:14:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:14:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:14:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:14:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:14:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:14:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:14:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:14:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:14:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:14:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:14:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:14:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:14:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:14:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:14:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:14:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:14:17:762] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:14:17:762] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:14:47:776] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:14:47:776] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:15:00:002] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:15:00 CST 2021
[00:15:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:15:00:002] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:15:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:15:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:15:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:15:00:002] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:15:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:15:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:15:00:003] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:15:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:15:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:15:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:15:00:003] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:15:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:15:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:15:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:15:00:003] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:15:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:15:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:15:00:004] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:15:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:15:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:15:17:782] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:15:17:782] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:15:47:794] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:15:47:794] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:16:00:015] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:16:00 CST 2021
[00:16:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:16:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:16:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:16:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:16:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:16:00:016] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:16:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:16:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:16:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:16:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:16:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:16:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:16:00:016] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:16:00:016] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:16:00:017] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:16:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:16:00:017] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:16:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:16:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:16:00:017] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:16:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:16:00:017] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:16:17:800] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:16:17:800] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:16:47:814] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:16:47:814] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:17:00:010] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:17:00 CST 2021
[00:17:00:010] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:17:00:010] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:17:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:17:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:17:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:17:00:010] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:17:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:17:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:17:00:011] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:17:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:17:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:17:00:012] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:17:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:17:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:17:17:823] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:17:17:823] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:17:47:827] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:17:47:827] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:18:00:008] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:18:00 CST 2021
[00:18:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:18:00:008] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:18:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:18:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:18:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:18:00:009] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:18:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:18:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:18:00:009] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:18:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:18:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:18:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:18:00:009] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:18:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:18:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:18:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:18:00:010] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:18:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:18:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:18:00:010] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:18:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:18:00:010] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:18:17:840] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:18:17:840] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:18:47:847] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:18:47:847] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:19:00:003] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:19:00 CST 2021
[00:19:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:19:00:003] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:19:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:19:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:19:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:19:00:004] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:19:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:19:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:19:00:004] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:19:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:19:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:19:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:19:00:004] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:19:00:004] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:19:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:19:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:19:00:005] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:19:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:19:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:19:00:005] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:19:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:19:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:19:17:853] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:19:17:853] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:19:47:868] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:19:47:868] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:19:55:283] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6a2fc469: (connection has passed maxLifetime)
[00:19:55:285] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@728ed1e1
[00:20:00:002] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:20:00 CST 2021
[00:20:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:20:00:002] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:20:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:20:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:20:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:20:00:002] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:20:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:20:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:20:00:003] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:20:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:20:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:20:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:20:00:003] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:20:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:20:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:20:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:20:00:004] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:20:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:20:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:20:00:004] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:20:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:20:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:20:17:870] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:20:17:870] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:20:24:798] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ebc43b8: (connection has passed maxLifetime)
[00:20:24:800] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3b92c50c
[00:20:47:378] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7eb1eff9: (connection has passed maxLifetime)
[00:20:47:380] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d4d1356
[00:20:47:881] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:20:47:881] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:20:50:235] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6e8c2707: (connection has passed maxLifetime)
[00:20:50:237] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@299d3e48
[00:20:53:127] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@a420180: (connection has passed maxLifetime)
[00:20:53:129] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@21b1b76d
[00:20:58:682] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@58038787: (connection has passed maxLifetime)
[00:20:58:683] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3cf7ea38
[00:21:00:013] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:21:00 CST 2021
[00:21:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:21:00:013] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:21:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:21:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:21:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:21:00:013] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:21:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:21:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:21:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:21:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:21:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:21:06:078] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2c5679e2: (connection has passed maxLifetime)
[00:21:06:080] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e6f693c
[00:21:17:889] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:21:17:889] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:21:37:274] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@208633e4: (connection has passed maxLifetime)
[00:21:37:276] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@79f546f5
[00:21:47:900] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:21:47:900] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:22:00:007] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:22:00 CST 2021
[00:22:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:22:00:007] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:22:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:22:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:22:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:22:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:22:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:22:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:22:00:008] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:22:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:22:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:22:00:009] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:22:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:22:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:22:00:655] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@71e441d7: (connection has passed maxLifetime)
[00:22:00:657] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41294693
[00:22:02:158] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@59874af: (connection has passed maxLifetime)
[00:22:02:159] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35658030
[00:22:17:900] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:22:17:900] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:22:47:904] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:22:47:904] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:23:00:010] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:23:00 CST 2021
[00:23:00:010] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:23:00:010] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:23:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:23:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:23:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:23:00:010] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:23:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:23:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:23:00:011] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:23:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:23:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:23:17:918] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:23:17:918] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:23:47:919] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:23:47:919] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:24:00:014] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:24:00 CST 2021
[00:24:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:24:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:24:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:24:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:24:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:24:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:24:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:24:00:016] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:24:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:24:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:24:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:24:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:24:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:24:17:926] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:24:17:926] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:24:47:937] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:24:47:937] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:25:00:002] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:25:00 CST 2021
[00:25:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:25:00:002] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:25:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:25:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:25:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:25:00:002] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:25:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:25:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:25:00:003] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:25:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:25:00:004] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:25:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:25:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:25:17:940] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:25:17:940] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:25:47:948] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:25:47:948] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:26:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:26:00 CST 2021
[00:26:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:26:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:26:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:26:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:26:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:26:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:26:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:26:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:26:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:26:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:26:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:26:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:26:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:26:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:26:17:950] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:26:17:950] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:26:47:959] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:26:47:959] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:27:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:27:00 CST 2021
[00:27:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:27:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:27:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:27:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:27:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:27:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:27:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:27:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:27:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:27:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:27:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:27:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:27:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:27:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:27:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:27:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:27:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:27:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:27:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:27:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:27:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:27:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:27:17:961] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:27:17:961] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:27:47:966] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:27:47:966] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:28:00:002] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:28:00 CST 2021
[00:28:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:28:00:002] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:28:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:28:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:28:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:28:00:003] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:28:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:28:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:28:00:003] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:28:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:28:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:28:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:28:00:003] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:28:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:28:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:28:00:004] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:28:00:004] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:28:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:28:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:28:00:004] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:28:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:28:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:28:17:967] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:28:17:967] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:28:47:981] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:28:47:981] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:29:00:007] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:29:00 CST 2021
[00:29:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:29:00:007] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:29:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:29:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:29:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:29:00:008] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:29:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:29:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:29:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:29:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:29:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:29:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:29:00:008] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:29:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:29:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:29:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:29:00:009] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:29:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:29:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:29:00:009] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:29:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:29:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:29:17:996] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:29:17:996] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:29:48:000] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:29:48:000] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:30:00:004] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:30:00 CST 2021
[00:30:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:30:00:004] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:30:00:004] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:30:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:30:00:004] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:30:00:004] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:30:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:30:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:30:00:004] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:30:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:30:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:30:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:30:00:004] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:30:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:30:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:30:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:30:00:005] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:30:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:30:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:30:00:005] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:30:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:30:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:30:18:003] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:30:18:003] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:30:48:006] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:30:48:006] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:31:00:012] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:31:00 CST 2021
[00:31:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:31:00:012] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:31:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:31:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:31:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:31:00:012] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:31:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:31:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:31:00:013] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:31:00:013] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:31:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:31:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:31:18:016] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:31:18:016] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:31:48:023] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:31:48:023] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:32:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:32:00 CST 2021
[00:32:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:32:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:32:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:32:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:32:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:32:00:005] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:32:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:32:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:32:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:32:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:32:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:32:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:32:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:32:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:32:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:32:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:32:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:32:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:32:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:32:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:32:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:32:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:32:18:023] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:32:18:023] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:32:48:024] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:32:48:024] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:33:00:014] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:33:00 CST 2021
[00:33:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:33:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:33:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:33:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:33:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:33:00:014] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:33:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:33:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:33:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:33:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:33:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:33:18:030] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:33:18:030] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:33:48:038] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:33:48:038] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:34:00:015] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:34:00 CST 2021
[00:34:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:34:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:34:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:34:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:34:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:34:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:34:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:34:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:34:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:34:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:34:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:34:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:34:00:016] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:34:00:016] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:34:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:34:00:016] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:34:00:016] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:34:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:34:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:34:00:017] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:34:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:34:00:017] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:34:18:044] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:34:18:044] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:34:48:046] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:34:48:046] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:35:00:002] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:35:00 CST 2021
[00:35:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:35:00:002] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:35:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:35:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:35:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:35:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:35:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:35:00:003] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:35:00:003] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:35:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:35:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:35:00:004] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:35:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:35:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:35:18:056] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:35:18:056] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:35:48:058] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:35:48:058] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:36:00:004] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:36:00 CST 2021
[00:36:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:36:00:004] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:36:00:004] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:36:00:004] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:36:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:36:00:005] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:36:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:36:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:36:00:005] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:36:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:36:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:36:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:36:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:36:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:36:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:36:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:36:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:36:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:36:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:36:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:36:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:36:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:36:18:064] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:36:18:064] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:36:48:070] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:36:48:070] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:37:00:002] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:37:00 CST 2021
[00:37:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:37:00:002] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:37:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:37:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:37:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:37:00:002] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:37:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:37:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:37:00:003] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:37:00:003] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:37:00:003] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:37:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:37:18:078] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:37:18:078] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:37:48:082] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:37:48:082] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:38:00:014] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:38:00 CST 2021
[00:38:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:38:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:38:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:38:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:38:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:38:00:014] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:38:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:38:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:38:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:38:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:38:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:38:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:38:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:38:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:38:18:096] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:38:18:096] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:38:48:103] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:38:48:103] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:39:00:016] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:39:00 CST 2021
[00:39:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:39:00:016] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:39:00:016] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:39:00:016] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:39:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:39:00:016] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:39:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:39:00:017] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:39:00:017] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:39:00:017] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:39:00:017] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:39:00:017] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:39:18:113] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:39:18:113] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:39:48:117] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:39:48:117] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:40:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:40:00 CST 2021
[00:40:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:40:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:40:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:40:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:40:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:40:00:005] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:40:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:40:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:40:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:40:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:40:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:40:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:40:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:40:18:131] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:40:18:131] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:40:48:135] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:40:48:135] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:41:00:006] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:41:00 CST 2021
[00:41:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:41:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:41:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:41:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:41:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:41:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:41:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:41:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:41:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:41:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:41:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:41:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:41:00:007] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:41:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:41:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:41:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:41:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:41:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:41:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:41:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:41:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:41:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:41:18:140] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:41:18:140] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:41:48:150] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:41:48:150] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:42:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:42:00 CST 2021
[00:42:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:42:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:42:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:42:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:42:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:42:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:42:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:42:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:42:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:42:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:42:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:42:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:42:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:42:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:42:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:42:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:42:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:42:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:42:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:42:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:42:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:42:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:42:18:166] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:42:18:166] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:42:48:172] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:42:48:172] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:43:00:012] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:43:00 CST 2021
[00:43:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:43:00:012] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:43:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:43:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:43:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:43:00:012] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:43:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:43:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:43:00:013] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:43:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:43:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:43:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:43:00:013] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:43:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:43:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:43:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:43:00:013] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:43:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:43:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:43:00:014] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:43:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:43:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:43:18:184] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:43:18:184] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:43:48:198] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:43:48:198] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:44:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:44:00 CST 2021
[00:44:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:44:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:44:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:44:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:44:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:44:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:44:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:44:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:44:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:44:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:44:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:44:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:44:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:44:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:44:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:44:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:44:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:44:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:44:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:44:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:44:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:44:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:44:18:208] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:44:18:208] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:44:48:222] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:44:48:222] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:45:00:006] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:45:00 CST 2021
[00:45:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:45:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:45:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:45:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:45:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:45:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:45:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:45:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:45:00:007] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:45:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:45:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:45:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:45:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:45:18:226] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:45:18:226] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:45:48:239] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:45:48:239] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:46:00:006] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:46:00 CST 2021
[00:46:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:46:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:46:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:46:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:46:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:46:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:46:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:46:00:007] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:46:00:007] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:46:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:46:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:46:00:008] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:46:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:46:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:46:18:247] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:46:18:247] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:46:48:260] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:46:48:260] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:47:00:014] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:47:00 CST 2021
[00:47:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:47:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:47:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:47:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:47:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:47:00:014] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:47:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:47:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:47:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:47:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:47:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:47:00:016] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:47:00:016] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:47:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:47:18:265] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:47:18:265] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:47:48:271] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:47:48:271] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:48:00:008] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:48:00 CST 2021
[00:48:00:008] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:48:00:008] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:48:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:48:00:008] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:48:00:008] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:48:00:008] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:48:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:48:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:48:00:009] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:48:00:009] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:48:00:009] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:48:18:277] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:48:18:277] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:48:48:279] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:48:48:279] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:49:00:014] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:49:00 CST 2021
[00:49:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:49:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:49:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:49:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:49:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:49:00:014] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:49:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:49:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:49:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:49:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:49:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:49:15:225] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@728ed1e1: (connection has passed maxLifetime)
[00:49:15:227] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ef971c
[00:49:18:291] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:49:18:291] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:49:48:294] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:49:48:294] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:50:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:50:00 CST 2021
[00:50:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:50:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:50:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:50:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:50:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:50:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:50:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:50:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:50:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:50:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:50:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:50:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:50:09:573] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5d4d1356: (connection has passed maxLifetime)
[00:50:09:575] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a7f821
[00:50:14:418] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3b92c50c: (connection has passed maxLifetime)
[00:50:14:419] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@75abf0ab
[00:50:18:308] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:50:18:308] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:50:20:183] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@299d3e48: (connection has passed maxLifetime)
[00:50:20:185] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2438eb96
[00:50:37:771] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3cf7ea38: (connection has passed maxLifetime)
[00:50:37:773] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@78335a78
[00:50:46:280] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21b1b76d: (connection has passed maxLifetime)
[00:50:46:283] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e0cd24b
[00:50:48:321] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:50:48:321] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:50:48:909] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2e6f693c: (connection has passed maxLifetime)
[00:50:48:910] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6a1f65bd
[00:51:00:001] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:51:00 CST 2021
[00:51:00:001] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:51:00:001] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:51:00:001] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:51:00:001] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:51:00:001] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:51:00:001] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:51:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:51:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:51:00:002] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:51:00:002] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:51:00:002] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:51:18:323] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:51:18:323] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:51:27:927] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@35658030: (connection has passed maxLifetime)
[00:51:27:929] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@77c53a60
[00:51:36:301] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@79f546f5: (connection has passed maxLifetime)
[00:51:36:303] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5b7ec9bd
[00:51:48:331] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:51:48:331] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:51:53:182] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@41294693: (connection has passed maxLifetime)
[00:51:53:184] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:728) - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@62272079
[00:52:00:005] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:52:00 CST 2021
[00:52:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:52:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:52:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:52:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:52:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:52:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:52:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:52:00:006] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:52:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:52:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:52:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:52:00:007] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:52:00:007] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:52:00:007] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:52:18:346] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:52:18:346] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:52:48:362] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:52:48:362] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:53:00:013] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:53:00 CST 2021
[00:53:00:013] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:53:00:013] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:53:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:53:00:013] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:53:00:013] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:53:00:014] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:53:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:53:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:53:00:014] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:53:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:53:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:53:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:53:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:53:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:53:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:53:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:53:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:53:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:53:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:53:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:53:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:53:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:53:18:366] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:53:18:366] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:53:48:382] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:53:48:382] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:54:00:014] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:54:00 CST 2021
[00:54:00:014] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:54:00:014] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:54:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:54:00:014] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:54:00:014] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:54:00:014] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:54:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:54:00:015] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:54:00:015] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:54:00:015] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:54:00:016] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:54:18:392] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:54:18:392] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:54:48:408] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:54:48:408] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:55:00:010] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:55:00 CST 2021
[00:55:00:010] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:55:00:010] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:55:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:55:00:010] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:55:00:010] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:55:00:011] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:55:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:55:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:55:00:011] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:55:00:011] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:55:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:55:00:011] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:55:00:011] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:55:00:011] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:55:00:012] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:55:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:55:00:012] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:55:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:55:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:55:00:012] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:55:00:012] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:55:00:012] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:55:18:417] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:55:18:417] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:55:48:430] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[00:55:48:430] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.fillPool(HikariPool.java:517) - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[00:56:00:004] [DEBUG] - org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:125) - Cleaning up sessions expiring at Sun Mar 28 00:56:00 CST 2021
[00:56:00:004] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:56:00:004] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:00:004] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:00:004] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:56:00:004] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:56:00:005] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:56:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:56:00:005] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:56:00:005] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:56:00:005] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:143) - Fetching Redis Connection from RedisConnectionFactory
[00:56:00:005] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:00:005] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:00:006] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] write() done
[00:56:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:56:00:006] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
[00:56:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[00:56:00:006] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:56:00:006] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] Completing command AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:00:006] [DEBUG] - org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:389) - Closing Redis Connection.
[00:56:16:072] [DEBUG] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1048) - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bdf6bb7, started on Sat Mar 27 20:23:28 CST 2021
[00:56:16:073] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[00:56:16:092] [DEBUG] - org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:365) - Stopping beans in phase 2147483647
[00:56:16:093] [DEBUG] - org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$3(DefaultLifecycleProcessor.java:238) - Bean 'documentationPluginsBootstrapper' completed its stop procedure
[00:56:16:094] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:16:094] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:16:094] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, epid=0x2] write() done
[00:56:16:094] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:56:16:095] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:16:095] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
[00:56:16:095] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
[00:56:16:095] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:56:16:095] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] Completing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:16:096] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:167) - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:419) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:196) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, epid=0x2] write() done
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:377) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:551) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] Received: 59 bytes, 1 commands in the stack
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:625) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:298) - Decode done, empty stack: true
[00:56:16:096] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:653) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] Completing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[00:56:16:097] [DEBUG] - io.lettuce.core.RedisChannelHandler.closeAsync(RedisChannelHandler.java:133) - closeAsync()
[00:56:16:097] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.closeAsync(DefaultEndpoint.java:579) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, epid=0x2] closeAsync()
[00:56:16:105] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.stop(RedisMessageListenerContainer.java:229) - Stopped RedisMessageListenerContainer
[00:56:16:106] [DEBUG] - org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$3(DefaultLifecycleProcessor.java:238) - Bean 'springSessionRedisMessageListenerContainer' completed its stop procedure
[00:56:16:107] [DEBUG] - org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$3(DefaultLifecycleProcessor.java:238) - Bean 'webServerGracefulShutdown' completed its stop procedure
[00:56:16:107] [DEBUG] - org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:365) - Stopping beans in phase 2147483646
[00:56:16:107] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:338) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] channelInactive()
[00:56:16:108] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelInactive$3(DefaultEndpoint.java:493) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, epid=0x2] deactivating endpoint handler
[00:56:16:108] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:362) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] channelInactive() done
[00:56:16:109] [DEBUG] - io.lettuce.core.protocol.ConnectionWatchdog.channelInactive(ConnectionWatchdog.java:177) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelInactive()
[00:56:16:109] [DEBUG] - io.lettuce.core.protocol.ConnectionWatchdog.channelInactive(ConnectionWatchdog.java:188) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] Reconnect scheduling disabled
[00:56:16:109] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelUnregistered(CommandHandler.java:223) - [channel=0x01209473, /127.0.0.1:11026 -> /127.0.0.1:6379, chid=0x2] channelUnregistered()
[00:56:16:237] [DEBUG] - org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$3(DefaultLifecycleProcessor.java:238) - Bean 'webServerStartStop' completed its stop procedure
[00:56:16:237] [DEBUG] - org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:365) - Stopping beans in phase 0
[00:56:16:243] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.stop(RedisMessageListenerContainer.java:229) - Stopped RedisMessageListenerContainer
[00:56:16:243] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.stop(RedisMessageListenerContainer.java:229) - Stopped RedisMessageListenerContainer
[00:56:16:244] [DEBUG] - org.springframework.jmx.export.MBeanExporter.destroy(MBeanExporter.java:452) - Unregistering JMX-exposed beans on shutdown
[00:56:16:245] [DEBUG] - org.springframework.jmx.support.MBeanRegistrationSupport.unregisterBeans(MBeanRegistrationSupport.java:186) - Unregistering JMX-exposed beans
[00:56:16:250] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[00:56:16:251] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ef971c: (connection evicted)
[00:56:16:251] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1a7f821: (connection evicted)
[00:56:16:251] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@75abf0ab: (connection evicted)
[00:56:16:252] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2438eb96: (connection evicted)
[00:56:16:252] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@78335a78: (connection evicted)
[00:56:16:252] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1e0cd24b: (connection evicted)
[00:56:16:252] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6a1f65bd: (connection evicted)
[00:56:16:252] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@77c53a60: (connection evicted)
[00:56:16:253] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5b7ec9bd: (connection evicted)
[00:56:16:253] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:134) - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@62272079: (connection evicted)
[00:56:16:253] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:421) - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[00:56:16:257] [DEBUG] - io.lettuce.core.RedisChannelHandler.closeAsync(RedisChannelHandler.java:133) - closeAsync()
[00:56:16:257] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.closeAsync(DefaultEndpoint.java:579) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] closeAsync()
[00:56:16:257] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:338) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] channelInactive()
[00:56:16:257] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelInactive$3(DefaultEndpoint.java:493) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, epid=0x1] deactivating endpoint handler
[00:56:16:257] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:362) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] channelInactive() done
[00:56:16:257] [DEBUG] - io.lettuce.core.AbstractRedisClient.shutdownAsync(AbstractRedisClient.java:520) - Initiate shutdown (100, 100, MILLISECONDS)
[00:56:16:257] [DEBUG] - io.lettuce.core.protocol.ConnectionWatchdog.channelInactive(ConnectionWatchdog.java:177) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelInactive()
[00:56:16:257] [DEBUG] - io.lettuce.core.protocol.ConnectionWatchdog.channelInactive(ConnectionWatchdog.java:188) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] Reconnect scheduling disabled
[00:56:16:257] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelUnregistered(CommandHandler.java:223) - [channel=0xeaccb891, /127.0.0.1:11021 -> /127.0.0.1:6379, chid=0x1] channelUnregistered()
[00:56:16:262] [DEBUG] - io.lettuce.core.resource.DefaultEventLoopGroupProvider.doRelease(DefaultEventLoopGroupProvider.java:247) - Release executor io.netty.channel.nio.NioEventLoopGroup@9a16af1
[00:56:16:263] [DEBUG] - io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:224) - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
[00:56:16:373] [DEBUG] - io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:224) - Freed 22 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
[00:56:16:378] [DEBUG] - io.lettuce.core.resource.DefaultClientResources.shutdown(DefaultClientResources.java:637) - Initiate shutdown (0, 2, SECONDS)
[00:56:16:382] [DEBUG] - io.lettuce.core.resource.DefaultEventLoopGroupProvider.shutdown(DefaultEventLoopGroupProvider.java:283) - Initiate shutdown (0, 2, SECONDS)
